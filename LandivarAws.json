{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Initial version of the project",
  "Resources": {
    "LandivarVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarVpc"
          }
        ]
      }
    },
    "LandivarAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "LandivarVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarAcl"
          }
        ]
      }
    },
    "LandivarAclIngress01": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "false",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "LandivarAcl"
        }
      }
    },
    "LandivarAclEgress01": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "LandivarAcl"
        }
      }
    },
    "LandivarSg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "LandivarVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarSg"
          }
        ]
      }
    },
    "LandivarSgIngress01": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "LandivarSg"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "LandivarSg"
        }
      }
    },
    "LandivarSgEgress01": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "LandivarSg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "LandivarDhcpOptionsDefault": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "us-east-2.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "LandivarDhcpOptionsAssociation": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "LandivarVpc"
        },
        "DhcpOptionsId": {
          "Ref": "LandivarDhcpOptionsDefault"
        }
      }
    },
    "LandivarIgw": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarIgw"
          }
        ]
      }
    },
    "LandivarIgwAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "LandivarVpc"
        },
        "InternetGatewayId": {
          "Ref": "LandivarIgw"
        }
      }
    },
    "LandivarSubnetPublic1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": "us-east-2c",
        "VpcId": {
          "Ref": "LandivarVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarSubnetPublic1"
          }
        ]
      }
    },
    "LandivarSubnetPublic1AclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "LandivarAcl"
        },
        "SubnetId": {
          "Ref": "LandivarSubnetPublic1"
        }
      }
    },
    "LandivarSubnetPrivate1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "us-east-2c",
        "VpcId": {
          "Ref": "LandivarVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarSubnetPrivate1"
          }
        ]
      }
    },
    "LandivarSubnetPrivate1AclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "LandivarAcl"
        },
        "SubnetId": {
          "Ref": "LandivarSubnetPrivate1"
        }
      }
    },
    "LandivarSubnetPrivate2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": "us-east-2b",
        "VpcId": {
          "Ref": "LandivarVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarSubnetPrivate2"
          }
        ]
      }
    },
    "LandivarSubnetPrivate2AclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "LandivarAcl"
        },
        "SubnetId": {
          "Ref": "LandivarSubnetPrivate2"
        }
      }
    },
    "LandivarRouteTablePublic": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "LandivarVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarRouteTablePublic"
          }
        ]
      }
    },
    "LandivarRouteTablePublicRoute01": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "LandivarRouteTablePublic"
        },
        "GatewayId": {
          "Ref": "LandivarIgw"
        }
      },
      "DependsOn": "LandivarIgwAttachment"
    },
    "LandivarSubnetPublic1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "LandivarRouteTablePublic"
        },
        "SubnetId": {
          "Ref": "LandivarSubnetPublic1"
        }
      }
    },
    "LandivarEipNat": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "LandivarNgw": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "LandivarEipNat",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "LandivarSubnetPublic1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarNgw"
          }
        ]
      }
    },
    "LandivarRouteTablePrivate": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "LandivarVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarRouteTablePrivate"
          }
        ]
      }
    },
    "LandivarRouteTablePrivateRoute01": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "LandivarRouteTablePrivate"
        },
        "NatGatewayId": {
          "Ref": "LandivarNgw"
        }
      }
    },
    "LandivarSubnetPrivate1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "LandivarRouteTablePrivate"
        },
        "SubnetId": {
          "Ref": "LandivarSubnetPrivate1"
        }
      }
    },
    "LandivarSubnetPrivate2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "LandivarRouteTablePrivate"
        },
        "SubnetId": {
          "Ref": "LandivarSubnetPrivate2"
        }
      }
    },
    "LandivarSgInstances": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "security group to grant access to the EC2 instances",
        "VpcId": {
          "Ref": "LandivarVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarSgInstances"
          }
        ]
      }
    },
    "LandivarSgInstancesIngress01": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "LandivarSgInstances"
        },
        "CidrIp": "0.0.0.0/0",
        "Description": "SSH access",
        "FromPort": "22",
        "ToPort": "22",
        "IpProtocol": "tcp"
      }
    },
    "LandivarSgInstancesIngress02": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "LandivarSgInstances"
        },
        "CidrIp": "0.0.0.0/0",
        "Description": "HTTP access",
        "FromPort": "80",
        "ToPort": "80",
        "IpProtocol": "tcp"
      }
    },
    "LandivarSgInstancesEgress01": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "LandivarSgInstances"
        },
        "CidrIp": "0.0.0.0/0",
        "IpProtocol": "-1"
      }
    },
    "LandivarInstanceFrontend01": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-2c",
        "ImageId": "ami-0b59bfac6be064b78",
        "InstanceInitiatedShutdownBehavior": "stop",
        "InstanceType": "t2.micro",
        "KeyName": "personal_key_student",
        "Monitoring": "false",
        "SecurityGroupIds": [
          {
            "Ref": "LandivarSgInstances"
          }
        ],
        "SubnetId": {
          "Ref": "LandivarSubnetPrivate1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarInstanceFrontend01"
          }
        ]
      }
    },
    "LandivarInstanceFrontend02": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-2b",
        "ImageId": "ami-0b59bfac6be064b78",
        "InstanceInitiatedShutdownBehavior": "stop",
        "InstanceType": "t2.micro",
        "KeyName": "personal_key_student",
        "Monitoring": "false",
        "SecurityGroupIds": [
          {
            "Ref": "LandivarSgInstances"
          }
        ],
        "SubnetId": {
          "Ref": "LandivarSubnetPrivate2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarInstanceFrontend02"
          }
        ]
      }
    },
    "LandivarInstanceTEMP": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-2c",
        "ImageId": "ami-0b59bfac6be064b78",
        "InstanceInitiatedShutdownBehavior": "stop",
        "InstanceType": "t2.micro",
        "KeyName": "personal_key_student",
        "Monitoring": "false",
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "True",
            "DeleteOnTermination": "True",
            "SubnetId": {
              "Ref": "LandivarSubnetPublic1"
            },
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "LandivarSgInstances"
              }
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash -xe",
                "sudo yum update -y",
                "sudo yum install httpd -y",
                "sudo /etc/init.d/httpd start",
                "echo \"<html><body><h1>Awesome Alvaro Enrique!!!</h1>\" > /var/www/html/index.html",
                "echo \"</body></html>\" >> /var/www/html/index.html"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarInstanceTEMP"
          }
        ]
      }
    },
    "LandivarRoleLambdaS3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AWSLambdaExecute"
        ],
        "Path": "/landivar/",
        "RoleName": "lambda-s3-role"
      }
    },
    "LandivarLambdaCreateThumbnail": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "awslandivar.lambda.code",
          "S3Key": "lambda_resize.zip"
        },
        "Description": "This function is in charge of the generation of thumbnails",
        "FunctionName": "CreateThumbnail",
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "LandivarRoleLambdaS3",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 10,
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarLambdaCreateThumbnail"
          }
        ]
      },
      "DependsOn": "LandivarRoleLambdaS3"
    },
    "LandivarLambdaCreateThumbnailPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "LandivarLambdaCreateThumbnail"
        },
        "Principal": "s3.amazonaws.com"
      }
    },
    "LandivarS3Images": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "AuthenticatedRead",
        "BucketName": "awslandivar.images",
        "NotificationConfiguration": {
          "LambdaConfigurations": [
            {
              "Event": "s3:ObjectCreated:*",
              "Function": {
                "Fn::GetAtt": [
                  "LandivarLambdaCreateThumbnail",
                  "Arn"
                ]
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarS3Images"
          }
        ]
      },
      "DependsOn": [
        "LandivarLambdaCreateThumbnail",
        "LandivarLambdaCreateThumbnailPermission"
      ]
    },
    "LandivarS3ImagesResized": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "AuthenticatedRead",
        "BucketName": "awslandivar.imagesresized",
        "Tags": [
          {
            "Key": "Name",
            "Value": "LandivarS3ImagesResized"
          }
        ]
      }
    }
  },
  "Outputs": {
    "WebsiteURL": {
      "Description": "URL for newly created website",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "LandivarInstanceTEMP",
                "PublicDnsName"
              ]
            }
          ]
        ]
      }
    }
  }
}